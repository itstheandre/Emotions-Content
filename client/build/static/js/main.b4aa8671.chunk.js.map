{"version":3,"sources":["motus-logo2.png","components/Navbar.js","services/api.js","components/Signup.js","components/Login.js","components/Content-Dashboard/ContentDashCard.js","components/Content-Dashboard/ContentManager.js","components/Content-Dashboard/AddContent.js","components/Post.js","components/Content-Dashboard/EditContent.js","components/face-api/FaceApi.js","components/UserViews/DisplayPost.js","components/UserViews/DetectEmotion.js","components/UserViews/UserCard.js","components/UserViews/CreatorPage.js","components/ContentInfo.js","components/Chart.js","components/Header.js","components/ProfileSettings/EditProfile.js","components/ProfileSettings/Settings.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","handleLogout","props","axios","delete","then","response","data","catch","err","setUser","Navbar","className","to","src","logo","style","height","user","onClick","fullName","marginTop","Signup","useState","username","setUsername","password","setPassword","message","setMessage","setFullName","console","log","onSubmit","e","preventDefault","post","signup","history","push","label","validate","group","error","success","type","name","id","value","onChange","target","Login","login","ContentDashCard","state","textToCopy","anotherPage","navigator","clipboard","writeText","setState","timeOut","setTimeout","componentDidMount","content","_id","handleClick","event","Axios","getData","this","title","date","contentType","textDecoration","color","cursor","textAlign","width","Component","ContentManager","get","contentArr","reverse","filled","length","map","el","key","AddContent","urlPath","setUrlPath","setTitle","setContentType","enctype","setEnctype","body","setBody","formInfo","image","audio","video","text","encType","htmlFor","display","flexDirection","files","uploadData","FormData","append","secure_url","aria-describedby","Post","setTextToCopy","useEffect","unique","match","params","owner","goBack","url","controls","EditContent","setId","editPost","put","median","values","sort","a","b","half","Math","floor","hidden","visibilityChange","document","msHidden","webkitHidden","FaceApi","actions","handleVisibilityChange","dataManager","clearInterval","myDetection","webcam","MaxAndAvg","getTime","timeSessionCalculation","faceDetection","angry","angryMaxValue","angryAvgValue","disgusted","disgustedMaxValue","disgustedAvgValue","fearful","fearfulMaxValue","fearfulAvgValue","happy","happyMaxValue","happyAvgValue","neutral","neutralMaxValue","neutralAvgValue","sad","sadMaxValue","sadAvgValue","surprised","surprisedMaxValue","surprisedAvgValue","age","ceil","gender","time","fullTime","min","sec","Infinity","detectionValues","timeElapsed","timeSession","currTime","Date","toString","split","day","month","year","hour","minStart","parseInt","secStart","minEnd","secEnd","angryValues","disgustedValues","fearfulValues","happyValues","neutralValues","sadValues","surprisedValues","ageValues","genderValues","maleCount","femaleCount","exactGender","forEach","x","max","ageArray","genderArray","maleNum","femaleNum","getElementById","getUserMedia","stream","srcObject","getVideoTracks","stop","faceApi","Promise","all","faceapi","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","ageGenderNet","addEventListener","canvas","displaySize","setInterval","withFaceLandmarks","withFaceExpressions","withAgeAndGender","withFaceDescriptors","undefined","detections","expressions","componentWillUnmount","removeEventListener","onBeforeunload","autoPlay","muted","DisplayPost","viewTotal","viewId","contentId","setContentId","setOwner","ownerId","setOwnerId","setViewId","setViewTotal","newId","views","created","UserCard","CreatorPage","setContent","contentData","Chart","avgChartData","maxChartData","emotionalImpact","malePercent","femalePercent","viewsArr","getEmotion","emotion","averageEmotion","reduce","acum","getAverage","array","previous","current","getMaxEmotion","emotionArr","maxEmotion","timeArr","hr","sec_min","myTime","round","neutralityArr","elem","neutralAvg","toFixed","ageAverage","genderArr","male","filter","emotionsCount","labels","datasets","backgroundColor","setNewData","updateState","chartData","allContent","resetData","hoverBackgroundColor","emotions","options","maintainAspectRatio","marginRight","Header","pointerEvents","frameBorder","allowFullScreen","fontSize","lineHeight","EditProfile","handleSubmit","onImageUpload","oldPasswordTest","newPasswordTest","Settings","profilePicture","App","exact","path","render","component","DetectEmotion","React","Boolean","window","location","hostname","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4aa8671.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/motus-logo2.27c4d86a.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../services/api\";\nimport logo from \"../motus-logo2.png\";\nimport \"../App.css\";\n\nconst handleLogout = props => {\n  logout().then(() => {\n    props.setUser(null);\n  });\n};\n\nconst Navbar = props => {\n  return (\n    <nav className=' sticky-top navbar navbar-expand-lg navbar-dark default-color'>\n      <Link className='navbar-brand' to='/'>\n        <img src={logo} style={{ height: \"30px\" }}></img>\n      </Link>\n\n      {props.user ? (\n        <>\n          <Link className='navbar-brand' to='/content-dashboard'>\n            Content\n          </Link>\n          <Link className='navbar-brand' to={`/chart`}>\n            Analytics\n          </Link>\n          <Link\n            className='navbar-brand my-2 my-lg-0 ml-auto'\n            to='/'\n            onClick={() => handleLogout(props)}\n          >\n            <i className='fas fa-sign-out-alt'></i>\n          </Link>{\" \"}\n        </>\n      ) : (\n        <>\n          <Link className='navbar-brand my-2 my-lg-0 ml-auto' to='/signup'>\n            Signup\n          </Link>\n          <Link className='navbar-brand my-2 my-lg-0 ml-auto' to='/login'>\n            <i className='fas fa-sign-in-alt'></i>\n          </Link>\n        </>\n      )}\n      {props.user && (\n        <h3 className='heyUser my-2 my-lg-0 ml-auto'>\n          Hey {props.user.fullName}\n        </h3>\n      )}\n      {props.user && (\n        <Link style={{ marginTop: \"5px\" }} to='/settings'>\n          <i className='fas fa-user-edit white-text'></i>\n        </Link>\n      )}\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import axios from \"axios\";\n\nconst signup = (username, password, fullName) => {\n  return axios\n    .post(\"/api/auth/signup\", { username, password, fullName })\n    .then(response => {\n      console.log(\"Response: I copied from Montasar:\", response.data);\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(\"/api/auth/login\", { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst logout = () => {\n  return axios\n    .delete(\"/api/auth/logout\")\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nexport { signup, login, logout };\n","import React, { useState } from \"react\";\nimport { signup } from \"../services/api\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBLabel\n} from \"mdbreact\";\nimport \"../App.css\";\n\n// Written in props. Equivalent in Classes below\n\nconst Signup = props => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  console.log(props);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    signup(username, password, fullName).then(data => {\n      if (data.message) {\n        setMessage(data.message);\n      } else {\n        props.setUser(data);\n        props.history.push(\"/content-dashboard\");\n      }\n    });\n  };\n\n  return (\n    <>\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol>\n            <h1 className='text-center mb-4 logIn'>Sign up</h1>\n            <form onSubmit={handleSubmit}>\n              <div className='grey-text'>\n                {/* <label htmlFor=\"username\">Username: </label> */}\n                <MDBInput\n                  label='username'\n                  validate\n                  group\n                  error='wrong'\n                  success='right'\n                  type='text'\n                  name='username'\n                  id='username'\n                  value={username}\n                  onChange={e => setUsername(e.target.value)}\n                />\n                {/* <label htmlFor=\"fullName\">Full Name: </label> */}\n                <MDBInput\n                  label='name'\n                  validate\n                  group\n                  error='wrong'\n                  success='right'\n                  type='text'\n                  name='fullName'\n                  id='fullName'\n                  value={fullName}\n                  onChange={e => setFullName(e.target.value)}\n                />\n                {/* <label htmlFor=\"password\">Password</label> */}\n                <MDBInput\n                  label='password'\n                  validate\n                  group\n                  error='wrong'\n                  success='right'\n                  type='password'\n                  name='password'\n                  id='password'\n                  value={password}\n                  onChange={e => setPassword(e.target.value)}\n                />\n              </div>\n              {message && <h1>{message}</h1>}\n              <div className='text-center'>\n                <MDBBtn type='submit'>Create Account</MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n\nexport default Signup;\n\n// export default class Signup extends Component {\n//   state = {\n//     username: \"\",\n//     password: \"\",\n//     message: \"\",\n//     fullName: \"\"\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     const { username, password, fullName } = this.state;\n//     signup(username, password, fullName).then(data => {\n//       if (data.message) {\n//         this.setState({\n//           message: data.message\n//         });\n//       } else {\n//         this.props.setUser(data);\n//         this.props.history.push(\"/\");\n//         // console.log(data);\n//       }\n//     });\n//   };\n\n//   handleChange = event => {\n//     const { name, value } = event.target;\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n//   render() {\n//     // console.log(this.state.username);\n//     return (\n//       <>\n//         <h1>Sign up</h1>\n//         <form onSubmit={this.handleSubmit}>\n//           <label htmlFor='username'>Username: </label>\n//           <input\n//             type='text'\n//             name='username'\n//             id='username'\n//             value={this.state.username}\n//             onChange={this.handleChange}\n//           />\n//           <label htmlFor='fullName'>Full Name: </label>\n//           <input\n//             type='text'\n//             name='fullName'\n//             id='fullName'\n//             value={this.state.fullName}\n//             onChange={this.handleChange}\n//           />\n//           <label htmlFor='password'>Password</label>\n//           <input\n//             type='password'\n//             name='password'\n//             id='password'\n//             value={this.state.password}\n//             onChange={this.handleChange}\n//           />\n//           {this.state.message && <h1>{this.state.message}</h1>}\n//           <button type='submit'>Create Account</button>\n//         </form>\n//       </>\n//     );\n//   }\n// }\n","import React, { useState } from \"react\";\nimport { login } from \"../services/api\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBLabel\n} from \"mdbreact\";\nimport \"../App.css\";\n// Written in props. Equivalent in Classes below\n\nconst Login = props => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    login(username, password).then(data => {\n      if (data.message) {\n        setMessage(data.message);\n      } else {\n        props.setUser(data);\n        props.history.push(\"/content-dashboard\");\n      }\n    });\n  };\n\n  return (\n    <>\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol>\n            <h1 className=' text-center mb-4 logIn'>Log in</h1>\n            <form onSubmit={handleSubmit}>\n              <div className='grey-text'>\n                {/* <label htmlFor=\"username\"></label> */}\n                <MDBInput\n                  label='username'\n                  validate\n                  group\n                  error='wrong'\n                  success='right'\n                  type='text'\n                  name='username'\n                  id='username'\n                  value={username}\n                  onChange={e => setUsername(e.target.value)}\n                />\n                {/* <label htmlFor=\"password\"></label> */}\n                <MDBInput\n                  label='password'\n                  validate\n                  group\n                  error='wrong'\n                  success='right'\n                  type='password'\n                  name='password'\n                  id='password'\n                  value={password}\n                  onChange={e => setPassword(e.target.value)}\n                />\n              </div>\n              {message && <h1>{message}</h1>}\n\n              <div className='text-center'>\n                <MDBBtn type='submit'>Login</MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n\nexport default Login;\n// export default class Login extends Component {\n//   state = {\n//     username: \"\",\n//     password: \"\",\n//     message: \"\"\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n\n//     const { username, password } = this.state;\n\n//     login(username, password).then(data => {\n//       if (data.message) {\n//         this.setState({\n//           message: data.message,\n//           username: \"\",\n//           password: \"\"\n//         });\n//       } else {\n//         // successfully logged in\n//         // update the state for the parent component\n//         this.props.setUser(data);\n//         this.props.history.push(\"/projects\");\n//       }\n//     });\n//   };\n\n//   handleChange = event => {\n//     const { name, value } = event.target;\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n//   render() {\n//     // console.log(this.state.username);\n//     return (\n//       <>\n//         <h1>Login</h1>\n//         <form onSubmit={this.handleSubmit}>\n//           <label htmlFor='username'>Username: </label>\n//           <input\n//             type='text'\n//             name='username'\n//             id='username'\n//             value={this.state.username}\n//             onChange={this.handleChange}\n//           />\n//           <label htmlFor='password'>Password</label>\n//           <input\n//             type='password'\n//             name='password'\n//             id='password'\n//             value={this.state.password}\n//             onChange={this.handleChange}\n//           />\n//           {this.state.message && <h1>{this.state.message}</h1>}\n\n//           <button type='submit'>Create Account</button>\n//         </form>\n//       </>\n//     );\n//   }\n// }\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBLabel\n} from \"mdbreact\";\n\nexport default class ContentDashCard extends Component {\n  state = {\n    textToCopy: \"\",\n    message: \"\"\n  };\n\n  anotherPage = () => {\n    navigator.clipboard.writeText(this.state.textToCopy);\n    this.setState({ message: \"Your link has been added to the clipboad\" });\n    this.timeOut();\n  };\n\n  timeOut = () => {\n    setTimeout(() => {\n      this.setState({ message: \"\" });\n    }, 1000);\n  };\n\n  componentDidMount = () => {\n    const id = this.props.content._id;\n    const user = this.props.user.username;\n    this.setState({\n      textToCopy: `https://motus-app.herokuapp.com/u/${user}/${id}`\n    });\n  };\n\n  handleClick = event => {\n    event.preventDefault();\n    return Axios.delete(`/api/content/${this.props.content._id}`).then(\n      response => {\n        // console.log(response.data);\n        this.props.getData();\n      }\n    );\n  };\n  render() {\n    return (\n      <div className='borderCard'>\n        <div className='contentCard'>\n          <h2>{this.props.content.title}</h2>\n          <h4>{this.props.content.date}</h4>\n          <h3>{this.props.content.contentType}</h3>\n          <Link\n            style={{ textDecoration: \"none\", color: \"black\" }}\n            to={`/content-dashboard/${this.props.content._id}`}\n          >\n            <i className='fas fa-lg fa-eye'></i>\n          </Link>\n          {/* EDIT */}\n          <Link\n            style={{ textDecoration: \"none\", color: \"black\" }}\n            to={`/edit/${this.props.content._id}`}\n          >\n            <i className='fas fa-lg fa-edit'></i>\n          </Link>\n          {/* DELETE */}\n          <i\n            className='fas fa-lg fa-trash-alt'\n            onClick={this.handleClick}\n            style={{ cursor: \"pointer\" }}\n          ></i>\n          {/* SHARE */}\n          <i\n            className='far fa-lg fa-share-square'\n            onClick={this.anotherPage}\n            style={{ cursor: \"pointer\" }}\n          ></i>\n          <p style={{ textAlign: \"center\" }}>{this.state.message}</p>\n          <Link to={`/u/${this.props.user.username}/${this.props.content._id}`}>\n            {\" \"}\n            View as Normal\n          </Link>\n        </div>\n        <hr width='80%' />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport ContentDashCard from \"./ContentDashCard\";\nimport { Link } from \"react-router-dom\";\n\nexport default class ContentManager extends Component {\n  state = {\n    user: this.props.user,\n    content: [],\n    textToCopy: \"\",\n    message: \"\"\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  getData = () => {\n    Axios.get(\"/api/content\").then(contentArr => {\n      this.setState({\n        content: contentArr.data.reverse()\n      });\n    });\n  };\n\n  render() {\n    // console.log(this.state.content);\n    const { user, content } = this.state;\n    const filled = content.length === 0 ? false : \"Not empty\";\n\n    if (!user) return <h1>You are not logged in, so no dashboard for you</h1>;\n\n    return (\n      <>\n        <div>\n          <h2 style={{ textAlign: \"center\" }} className='logIn h3'>\n            My Content Dashboard\n          </h2>\n\n          <br />\n\n          {!filled && <div> </div>}\n          {this.state.content.map(el => {\n            return (\n              <div className='text-center dashCard' key={el._id}>\n                <ContentDashCard\n                  content={el}\n                  getData={this.getData}\n                  key={el._id}\n                  user={this.state.user}\n                />\n              </div>\n            );\n          })}\n        </div>\n        <div className='fixed-bottom addBtn'>\n          <Link to='/content-dashboard/add'>\n            <i className='fas fa-3x fa-plus-circle text-default'></i>\n          </Link>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBLabel\n} from \"mdbreact\";\n\nconst AddContent = props => {\n  const [urlPath, setUrlPath] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [contentType, setContentType] = useState(\"image\");\n  const [enctype, setEnctype] = useState(false);\n  const [body, setBody] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  // const [selected, setSelected] = useState(null);\n\n  const handleChange = event => {\n    console.log(`Option selected:`, event.target.value);\n    const { value } = event.target;\n    console.log(typeof value, value === event.target.value);\n    if (value === \"text\") {\n      setContentType(value);\n      setMessage(\"Adding text will be added later. Stay tuned!\");\n    } else if (value !== \"video\") {\n      setContentType(value);\n      setEnctype(true);\n    } else {\n      setContentType(value);\n      setMessage(\"\");\n    }\n  };\n\n  // Form Submit Handler. Sends title, contentType, Body and the URL to the Database\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (urlPath && title && contentType && body) {\n      console.log(urlPath);\n      axios\n        .post(\"/api/content/add\", {\n          urlPath,\n          title,\n          contentType,\n          body\n        })\n        .then(() => {\n          props.history.push(\"/content-dashboard\");\n        });\n    } else {\n      setMessage(\"Please fill out the whole form\");\n    }\n  };\n\n  // Sends Image to\n  const onImageUpload = event => {\n    console.log(\"the file to be added is\", event.target.files[0]);\n\n    const files = event.target.files[0];\n    const uploadData = new FormData();\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n    uploadData.append(\"urlPath\", files);\n    axios.post(\"/api/content/add/image\", uploadData).then(response => {\n      const urlPath = response.data.secure_url;\n      setUrlPath(urlPath);\n    });\n  };\n\n  const onAudioUpload = event => {\n    console.log(\"the file to be added is\", event.target.files[0]);\n\n    const files = event.target.files[0];\n    const uploadData = new FormData();\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n    uploadData.append(\"urlPath\", files);\n    axios.post(\"/api/content/add/audio\", uploadData).then(response => {\n      const urlPath = response.data.secure_url;\n      setUrlPath(urlPath);\n    });\n  };\n\n  const formInfo = enctype ? \"multipart/form-data\" : \"\";\n  const image = contentType === \"image\";\n  const audio = contentType === \"audio\";\n  const video = contentType === \"video\";\n  const text = contentType === \"text\";\n\n  return (\n    <>\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol>\n            <form onSubmit={handleSubmit} encType={formInfo}>\n              <label className=\"text-default logIn\" htmlFor=\"title\">\n                Title\n              </label>\n              <MDBInput\n                label=\"\"\n                type=\"text\"\n                name=\"title\"\n                id=\"title\"\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n              />\n              <label className=\"text-default logIn\" htmlFor=\"contentType\">\n                Content Type\n              </label>\n              <select\n                className=\"browser-default custom-select\"\n                id=\"contentType\"\n                name=\"contentType\"\n                value={contentType}\n                onChange={handleChange}\n              >\n                <option value=\"image\">Image</option>\n                <option value=\"text\">Text</option>\n                <option value=\"audio\">Audio</option>\n                <option value=\"video\">Video</option>\n              </select>\n              {image && (\n                <>\n                  <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <label className=\"text-default logIn\" htmlFor=\"file\">\n                      Upload your image\n                    </label>\n                    <div className=\"input-group\">\n                      <div className=\"custom-file\">\n                        <input\n                          type=\"file\"\n                          name=\"urlPath\"\n                          id=\"urlPath\"\n                          onChange={onImageUpload}\n                          className=\"custom-file-input\"\n                          aria-describedby=\"inputGroupFileAddon01\"\n                        />\n                        <label\n                          className=\"custom-file-label grey-text\"\n                          htmlFor=\"file\"\n                        >\n                          choose file\n                        </label>\n                      </div>\n                    </div>\n                    <br />\n                    <div>\n                      <img\n                        style={{ height: \"100px\", textAlign: \"center\" }}\n                        src={urlPath}\n                      />\n                    </div>\n                  </div>\n                  <br />\n                  {/* <MDBInput\n                    type=\"file\"\n                    name=\"urlPath\"\n                    id=\"urlPath\"\n                    onChange={onImageUpload}\n                  /> */}\n                </>\n              )}\n              {audio && (\n                <>\n                  <label className=\"text-default logIn\" htmlFor=\"file\">\n                    Upload your audio\n                  </label>\n                  <MDBInput\n                    type=\"file\"\n                    name=\"urlPath\"\n                    id=\"urlPath\"\n                    onChange={onAudioUpload}\n                  />\n                </>\n              )}\n              {video && (\n                <>\n                  <label htmlFor=\"file\">Paste your Youtube Link</label>\n                  <MDBInput\n                    type=\"text\"\n                    name=\"urlPath\"\n                    id=\"urlPath\"\n                    onChange={e => setUrlPath(e.target.value)}\n                    value={urlPath}\n                  />\n                </>\n              )}\n              {text && <div>{message}</div>}\n              <label htmlFor=\"body\">Add a description</label>\n              <MDBInput\n                name=\"body\"\n                id=\"body\"\n                type=\"text\"\n                value={body}\n                onChange={e => setBody(e.target.value)}\n              />\n              {!text && (\n                <div className=\"text-center\">\n                  <MDBBtn type=\"submit\">Upload</MDBBtn>\n                </div>\n              )}\n              {message}\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n\nexport default AddContent;\n\n// export default class AddContent extends Component {\n//   state = {\n//     url: \"\",\n//     title: \"\",\n//     contentType: \"text\",\n//     body: \"\",\n//     imagePath: \"\",\n//     encType: false\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     // imagePath\n//     const { url, title, contentType, body, imagePath } = this.state;\n//     console.log(\"WHATS UP\", this.state.imagePath);\n//     axios\n//       .post(\"/api/content/add\", {\n//         url,\n//         title,\n//         contentType,\n//         body,\n//         imagePath\n//       })\n//       .then(() => {\n//         this.props.history.push(\"/content-dashboard\");\n//       });\n//   };\n\n//   handleChange = event => {\n//     const { name, value } = event.target;\n//     console.log(name);\n//     console.log(value);\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n\n//   onUpload = event => {\n//     console.log(\"the file to be added is\", event.target.files[0]);\n\n//     const files = event.target.files[0];\n//     const uploadData = new FormData();\n//     // imageUrl => this name has to be the same as in the model since we pass\n//     // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n//     uploadData.append(\"imagePath\", files);\n//     axios.post(\"/api/content/add/image\", uploadData).then(response => {\n//       const imagePath = response.data.secure_url;\n//       console.log(typeof imagePath);\n//       this.setState({\n//         imagePath\n//       });\n//     });\n//   };\n\n//   handleSelect = event => {\n//     const { name, value } = event.target;\n//     console.log(name);\n//     if (value !== \"text\") {\n//       this.setState({\n//         [name]: value,\n//         encType: true\n//       });\n//     } else if (value === \"text\") {\n//       this.setState({\n//         [name]: value,\n//         encType: false\n//       });\n//     }\n//   };\n\n//   // encType='multipart/form-data'\n//   render() {\n//     console.log(this.state.encType);\n//     const { contentType } = this.state;\n//     const notText = contentType !== \"text\" ? true : false;\n\n//     const enctype = this.state.encType ? \"multipart/form-data\" : \"\";\n\n//     return (\n//       <>\n//         <form onSubmit={this.handleSubmit} encType={enctype}>\n//           <label htmlFor='url'>URL</label>\n//           <input\n//             type='text'\n//             name='url'\n//             id='title'\n//             value={this.state.url}\n//             onChange={this.handleChange}\n//           />\n\n//           <label htmlFor='title'>Title</label>\n//           <input\n//             type='text'\n//             name='title'\n//             id='title'\n//             value={this.state.title}\n//             onChange={this.handleChange}\n//           />\n//           <label htmlFor='contentType'>Content Type</label>\n//           <select\n//             id='contentType'\n//             name='contentType'\n//             value={this.state.contentType}\n//             onChange={this.handleSelect}\n//           >\n//             <option value='text'>Text</option>\n//             <option value='audio'>Audio</option>\n//             <option value='video'>Video</option>\n//             <option value='image'>Image</option>\n//           </select>\n\n//           {notText && (\n//             <>\n//               <label htmlFor='file'>Content</label>\n//               <input\n//                 type='file'\n//                 name='imagePath'\n//                 id='imagePath'\n//                 onChange={this.onUpload}\n//               />{\" \"}\n//             </>\n//           )}\n//           <label htmlFor='body'>Body</label>\n//           <input\n//             type='text'\n//             name='body'\n//             id='body'\n//             value={this.state.body}\n//             onChange={this.handleChange}\n//           />\n//           <button type='submit'>Add your lovely content now</button>\n//         </form>\n//       </>\n//     );\n//   }\n// }\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ReactPlayer from \"react-player\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { Link } from \"react-router-dom\";\n\n// Written with Hooks. Same as below\n\nconst Post = props => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  // const [id, setId] = useState(\"\");\n  // const [owner, setOwner] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [textToCopy, setTextToCopy] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [contentType, setContentType] = useState(\"\");\n  const [urlPath, setUrlPath] = useState(\"\");\n\n  // const getPostData = () => {\n  //   const { unique } = props.match.params;\n  //   axios.get(`/api/content/${unique}`).then(response => {\n  //     const post = response.data;\n  //     const { title, body } = post;\n  //     const id = post._id;\n  //     const owner = post.owner.username;\n  //     const { fullName } = post.owner;\n  //     setTitle(title);\n  //     setBody(body);\n  //     setId(id);\n  //     setOwner(owner);\n  //     setFullName(fullName);\n  //     setTextToCopy(`http://localhost:3000/u/${owner}/${id}`);\n  //   });\n  // };\n\n  // useEffect(() => {\n  //   getPostData();\n  // }, []);\n\n  useEffect(() => {\n    const { unique } = props.match.params;\n    axios.get(`/api/content/${unique}`).then(response => {\n      console.log(\"HEER\", response.data);\n      const post = response.data;\n      const { title, body, urlPath, contentType } = post;\n      const id = post._id;\n      const owner = post.owner.username;\n      const { fullName } = post.owner;\n      setTitle(title);\n      setBody(body);\n      setUrlPath(urlPath);\n      setContentType(contentType);\n      // setOwner(owner);\n      setFullName(fullName);\n      setTextToCopy(`https://motus-app.herokuapp.com//u/${owner}/${id}`);\n    });\n  }, []);\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(textToCopy);\n    setMessage(\"Your link has been copied to the cliboard\");\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 2000);\n  };\n\n  const video = contentType === \"video\";\n  const audio = contentType === \"audio\";\n  const image = contentType === \"image\";\n  console.log(urlPath);\n  return (\n    <div>\n      <i\n        className='fas fa-3x fa-angle-left'\n        onClick={() => props.history.goBack()}\n      ></i>\n\n      <div className='motusHeader'>\n        {/* <iframe\n          style={{ pointerEvents: \"none\" }}\n          src='https://giphy.com/embed/d2YVPRhQXI5FxJRe'\n          width='480'\n          height='240'\n          frameBorder='0'\n          className='giphy-embed'\n        ></iframe> */}\n        <h1>{title}</h1>\n        {image && <img src={urlPath} style={{ width: \"100%\" }} />}\n        {video && (\n          <div className='videoPlayer'>\n            <div className='embed-responsive'>\n              <ReactPlayer url={urlPath} controls={true} />\n            </div>\n          </div>\n        )}\n        {audio && <ReactAudioPlayer src={urlPath} controls />}\n\n        <p>{body}</p>\n        <i\n          className='fas fa-2x fa-share-square'\n          style={{ cursor: \"pointer\" }}\n          onClick={handleCopy}\n        ></i>\n\n        <p>{message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n\n// export default class Post extends Component {\n//   state = {\n//     title: \"\",\n//     body: \"\",\n//     id: \"\",\n//     owner: \"\",\n//     fullName: \"\"\n//   };\n\n//   getPostData = () => {\n//     const { unique } = this.props.match.params;\n//     axios.get(`/api/content/${unique}`).then(response => {\n//       const post = response.data;\n//       const { title, body } = post;\n//       const id = post._id;\n//       const owner = post.owner.username;\n//       const { fullName } = post.owner;\n//       this.setState({\n//         title,\n//         body,\n//         id,\n//         owner,\n//         fullName,\n//         textToCopy: `http://localhost:3000/u/${owner}/${id}`\n//       });\n//     });\n//   };\n\n//   componentDidMount = () => {\n//     this.getPostData();\n//   };\n\n//   render() {\n//     // console.log(this.state);\n//     return (\n//       <div>\n//         <h1>{this.state.title}</h1>\n//         <p>{this.state.body}</p>\n//         <button\n//           onClick={() => {\n//             navigator.clipboard.writeText(this.state.textToCopy);\n//           }}\n//         >\n//           Share this link and check the emotional responses.\n//         </button>\n//       </div>\n//     );\n//   }\n// }\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBLabel\n} from \"mdbreact\";\n\nconst EditContent = props => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [id, setId] = useState(\"\");\n\n  // const getData = () => {\n  //   const { editPost } = props.match.params;\n  //   axios.get(`/api/content/${editPost}`).then(post => {\n  //     const id = post.data._id;\n  //     const { title, body } = post.data;\n  //     setTitle(title);\n  //     setBody(body);\n  //     setId(id);\n  //   });\n  // };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.put(`/api/content/${id}`, { title, body }).then(() => {\n      props.history.push(\"/content-dashboard\");\n    });\n  };\n\n  useEffect(() => {\n    // getData(); Same as above. Only written here to stop warning\n    const { editPost } = props.match.params;\n    axios.get(`/api/content/${editPost}`).then(post => {\n      const id = post.data._id;\n      const { title, body } = post.data;\n      setTitle(title);\n      setBody(body);\n      setId(id);\n    });\n  }, []);\n\n  return (\n    <>\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol>\n            <form onSubmit={handleSubmit}>\n              <div className=\"text-default\">\n                <label className=\"text-default logIn\" htmlFor=\"title\">\n                  Title\n                </label>\n                <MDBInput\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  value={title}\n                  onChange={e => setTitle(e.target.value)}\n                />\n\n                <label className=\"text-default\" htmlFor=\"body\">\n                  Description\n                </label>\n                <MDBInput\n                  type=\"text\"\n                  id=\"body\"\n                  name=\"body\"\n                  value={body}\n                  onChange={e => setBody(e.target.value)}\n                />\n                <div className=\"text-center\">\n                  <MDBBtn type=\"submit\">Save</MDBBtn>\n                </div>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n\nexport default EditContent;\n\n// export default class EditContent extends Component {\n//   state = {\n//     title: \"\",\n//     body: \"\",\n//     id: \"\"\n//   };\n\n//   getData = () => {\n//     const { editPost } = this.props.match.params;\n//     // console.log(this.props.match.params.editPost);\n//     axios.get(`/api/content/${editPost}`).then(post => {\n//       // console.log(post.data);\n//       this.setState({\n//         title: post.data.title,\n//         body: post.data.body,\n//         id: post.data._id\n//       });\n//     });\n//   };\n\n//   componentDidMount = () => {\n//     this.getData();\n//   };\n\n//   handleChange = event => {\n//     const { name, value } = event.target;\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     const { title, body, id } = this.state;\n//     axios.put(`/api/content/${id}`, { title, body }).then(() => {\n//       this.props.history.push(\"/content-dashboard\");\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <>\n//         <form onSubmit={this.handleSubmit}>\n//           <label htmlFor='title'>Title</label>\n//           <input\n//             type='text'\n//             id='title'\n//             name='title'\n//             value={this.state.title}\n//             onChange={this.handleChange}\n//           />\n\n//           <label htmlFor='body'>Body</label>\n//           <input\n//             type='text'\n//             id='body'\n//             name='body'\n//             value={this.state.body}\n//             onChange={this.handleChange}\n//           />\n//           <button type='submit'>Edit your content</button>\n//         </form>\n//       </>\n//     );\n//   }\n// }\n","import React, { Component } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport axios from \"axios\";\nimport { Beforeunload } from \"react-beforeunload\";\n\n// MEDIAN FUNCTION to have more accurate result from the emotions\nconst median = values => {\n  if (values.length === 0) return 0;\n\n  values.sort((a, b) => {\n    return a - b;\n  });\n\n  var half = Math.floor(values.length / 2);\n\n  if (values.length % 2) return values[half];\n\n  return (values[half - 1] + values[half]) / 2.0;\n};\n//-------------------------------------------------------------------\n\n//_______________________CHECK TAB FOCUS_____________________________\nlet hidden = null;\nlet visibilityChange = null;\nif (typeof document.hidden !== \"undefined\") {\n  // Opera 12.10 and Firefox 18 and later support\n  hidden = \"hidden\";\n  visibilityChange = \"visibilitychange\";\n} else if (typeof document.msHidden !== \"undefined\") {\n  hidden = \"msHidden\";\n  visibilityChange = \"msvisibilitychange\";\n} else if (typeof document.webkitHidden !== \"undefined\") {\n  hidden = \"webkitHidden\";\n  visibilityChange = \"webkitvisibilitychange\";\n}\n// __________________________________________________________________\n\nexport default class FaceApi extends Component {\n  // SAVE TAB FOCUS\n  state = {\n    actions: []\n  };\n\n  handleVisibilityChange = () => {\n    if (document[hidden]) {\n      this.setState({ actions: [...this.state.actions, \"hide\"] });\n    } else {\n      this.setState({ actions: [...this.state.actions, \"show\"] });\n    }\n  };\n\n  // MANAGES THE FACE DETECTION OBJ, STORE INFO TO DB, STOP FACEAPI DETECTION, CALCULATE MEDIAN AND MAX DETECTION VALUES, STOP WEBCAMS\n  dataManager = () => {\n    clearInterval(this.myDetection);\n    this.webcam();\n\n    // CALCULATE MAX AND AVG VALUES OF EMOTIONS DURING THE SESSION\n    const values = this.MaxAndAvg();\n    const getTime = this.timeSessionCalculation();\n    // STORE THE MAX AND AVG VALUES IN faceDetection Object\n    let faceDetection = {\n      angry: [values.angryMaxValue, values.angryAvgValue],\n      disgusted: [values.disgustedMaxValue, values.disgustedAvgValue],\n      fearful: [values.fearfulMaxValue, values.fearfulAvgValue],\n      happy: [values.happyMaxValue, values.happyAvgValue],\n      neutral: [values.neutralMaxValue, values.neutralAvgValue],\n      sad: [values.sadMaxValue, values.sadAvgValue],\n      surprised: [values.surprisedMaxValue, values.surprisedAvgValue],\n      age: Math.ceil(values.age),\n      gender: values.gender,\n      time: {\n        fullTime: values.time,\n        min: getTime.min,\n        sec: getTime.sec\n      }\n    };\n\n    console.log(\"FaceDetectionOBJ------\", faceDetection);\n    console.log(\"STATE AFTER UNMOUNT-------\", values);\n\n    // SEND faceDetection Object to the DB\n    if (values.angryMaxValue === -Infinity) {\n      console.log(\"-infinity\");\n      faceDetection.angry[0] = 0;\n      faceDetection.disgusted[0] = 0;\n      faceDetection.fearful[0] = 0;\n      faceDetection.happy[0] = 0;\n      faceDetection.neutral[0] = 0;\n      faceDetection.sad[0] = 0;\n      faceDetection.surprised[0] = 0;\n      faceDetection.age = 25;\n      console.log(faceDetection);\n      axios\n        .put(`/api/views/${this.props.id}`, faceDetection)\n        .then(detectionValues => {\n          console.log(detectionValues);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    } else {\n      console.log(\"Hi\");\n      axios\n        .put(`/api/views/${this.props.id}`, faceDetection)\n        .then(detectionValues => {\n          console.log(detectionValues);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  };\n\n  //_____________________TIME SESSION MANAGER____________________\n  timeElapsed = [];\n\n  timeSession = () => {\n    let currTime = \"\";\n    let startEndSession = [];\n    let date = new Date().toString().split(\" \");\n    let day = date[2];\n    let month = date[1];\n    let year = date[3];\n    let time = date[4].toString().split(\"\");\n    // let gmt = date[5];\n\n    let hour = time[0] + time[1];\n    let min = time[3] + time[4];\n    let sec = time[6] + time[7];\n    currTime = `${day} ${month} ${year} ${hour}:${min}:${sec}`;\n    // console.log(day, month, year, hour, min, sec);\n    startEndSession = this.timeElapsed.push(currTime);\n    return startEndSession;\n  };\n\n  timeSessionCalculation = () => {\n    let minStart = parseInt(this.timeElapsed[0].split(\" \")[3].split(\":\")[1]);\n    let secStart = parseInt(this.timeElapsed[0].split(\" \")[3].split(\":\")[2]);\n    let minEnd = parseInt(this.timeElapsed[1].split(\" \")[3].split(\":\")[1]);\n    let secEnd = parseInt(this.timeElapsed[1].split(\" \")[3].split(\":\")[2]);\n\n    let minElapsed = () => {\n      return minEnd - minStart;\n    };\n    let secElapsed = () => {\n      if (minEnd - minStart > 0) {\n        let secInit = 60 - secStart;\n        return secInit + secEnd;\n      } else {\n        return secEnd - secStart;\n      }\n    };\n    return { min: minElapsed(), sec: secElapsed() };\n  };\n\n  //_______________________________________________________________\n\n  // FACEAPI Detections\n  angryValues = [];\n  disgustedValues = [];\n  fearfulValues = [];\n  happyValues = [];\n  neutralValues = [];\n  sadValues = [];\n  surprisedValues = [];\n  ageValues = [];\n  genderValues = [];\n\n  // DETECTS THE EXACT GENDER\n  maleCount = 0;\n  femaleCount = 0;\n\n  exactGender = gender => {\n    gender &&\n      gender.forEach(x => {\n        if (x === \"male\") {\n          this.maleCount++;\n        } else if (x === \"female\") {\n          this.femaleCount++;\n        }\n      });\n    if (this.maleCount > this.femaleCount) {\n      return \"male\";\n    } else if (this.femaleCount > this.maleCount) {\n      return \"female\";\n    } else {\n      return \"\";\n    }\n  };\n\n  // CALCULATE MAX AND AVG VALUES OF THE EMOTIONS ---- GENDER ---- AGE AVG\n  MaxAndAvg = () => {\n    return {\n      angryMaxValue: Math.max(...this.angryValues),\n      disgustedMaxValue: Math.max(...this.disgustedValues),\n      fearfulMaxValue: Math.max(...this.fearfulValues),\n      happyMaxValue: Math.max(...this.happyValues),\n      neutralMaxValue: Math.max(...this.neutralValues),\n      sadMaxValue: Math.max(...this.sadValues),\n      surprisedMaxValue: Math.max(...this.surprisedValues),\n      angryAvgValue: median(this.angryValues),\n      // this.angryValues.reduce((x, y) => x + y, 0) / this.angryValues.length,\n      disgustedAvgValue: median(this.disgustedValues),\n      // this.disgustedValues.reduce((x, y) => x + y, 0) /\n      // this.disgustedValues.length,\n      fearfulAvgValue: median(this.fearfulValues),\n      // this.fearfulValues.reduce((x, y) => x + y, 0) /\n      // this.fearfulValues.length,\n      happyAvgValue: median(this.happyValues),\n      // this.happyValues.reduce((x, y) => x + y, 0) / this.happyValues.length,\n      neutralAvgValue: median(this.neutralValues),\n      // this.neutralValues.reduce((x, y) => x + y, 0) /\n      // this.neutralValues.length,\n      sadAvgValue: median(this.sadValues),\n      // this.sadValues.reduce((x, y) => x + y, 0) / this.sadValues.length,\n      surprisedAvgValue: median(this.surprisedValues),\n      // this.surprisedValues.reduce((x, y) => x + y, 0) /\n      // this.surprisedValues.length,2\n      age: median(this.ageValues),\n      ageArray: this.ageValues,\n      // mostOccurredAge: this.exactAge(this.ageValues),\n      // this.ageValues.reduce((x, y) => x + y, 0) / this.ageValues.length,\n      // gender: this.genderValues[10],\n      gender: this.exactGender(this.genderValues),\n      genderArray: this.genderValues,\n      maleNum: this.maleCount,\n      femaleNum: this.femaleCount,\n      time: this.timeElapsed\n    };\n  };\n\n  // variable for detection, to stop the detection when the component is unmounted\n  myDetection = 0;\n\n  // stop all the webcams\n  webcam = () => {\n    const video = document.getElementById(\"video\");\n    navigator.getUserMedia(\n      { video: {} },\n      stream =>\n        (video.srcObject = stream.getVideoTracks().forEach(x => x.stop())),\n      err => console.error(err)\n    );\n  };\n\n  //__________________________Face API________________________//\n  faceApi = () => {\n    const video = document.getElementById(\"video\");\n\n    //Load Neural Networks models\n    Promise.all([\n      faceapi.nets.tinyFaceDetector.loadFromUri(\"/assets\"),\n      faceapi.nets.faceLandmark68Net.loadFromUri(\"/assets\"),\n      faceapi.nets.faceRecognitionNet.loadFromUri(\"/assets\"),\n      faceapi.nets.faceExpressionNet.loadFromUri(\"/assets\"),\n      faceapi.nets.ageGenderNet.loadFromUri(\"/assets\")\n    ]).then(startVideo);\n\n    // start webcam\n    // JUST WAIT A BIT: THE CAMERA IS OFF, BUT THE LED WILL STAY ON FOR A FEW SECs\n    function startVideo() {\n      navigator.getUserMedia(\n        { video: {} },\n        stream => (video.srcObject = stream),\n        err => console.error(err)\n      );\n    }\n\n    // append canvas on the video tag for the skeleton\n    video.addEventListener(\"play\", async () => {\n      const canvas = await faceapi.createCanvasFromMedia(video);\n      document.body.append(canvas);\n      const displaySize = { width: video.width, height: video.height };\n      await faceapi.matchDimensions(canvas, displaySize);\n      console.log(\"WEBCAM LOADED\");\n\n      this.myDetection = setInterval(async () => {\n        const detections = await faceapi\n          .detectAllFaces(video, new faceapi.TinyFaceDetectorOptions())\n          .withFaceLandmarks()\n          .withFaceExpressions()\n          .withAgeAndGender()\n          .withFaceDescriptors();\n\n        if (detections[0] === undefined) {\n          console.log(\"DETECTION FAILED... \");\n        } else if (detections[0].expressions) {\n          console.log(\"STORING EMOTIONS...\");\n          if (detections[0].expressions.angry) {\n            // console.log(\"angry: \", detections[0].expressions.angry.toFixed(4));\n            //store ANGRY values in the array angryValues\n            this.angryValues.push(detections[0].expressions.angry);\n          }\n          if (detections[0].expressions.disgusted) {\n            // console.log(\"disgusted: \", detections[0].expressions.disgusted);\n            //store DISGUSTED values in the array disgustedValues\n            this.disgustedValues.push(detections[0].expressions.disgusted);\n          }\n          if (detections[0].expressions.fearful) {\n            // console.log(\"fearful: \", detections[0].expressions.fearful);\n            //store FEARFUL values in the array fearfulValues\n            this.fearfulValues.push(detections[0].expressions.fearful);\n          }\n          if (detections[0].expressions.happy) {\n            // console.log(\"happy: \", detections[0].expressions.happy);\n            //store HAPPY values in the array happyValues\n            this.happyValues.push(detections[0].expressions.happy);\n          }\n          if (detections[0].expressions.neutral) {\n            // console.log(\"neutral: \", detections[0].expressions.neutral);\n            //store NEUTRAL values in the array neutralValues\n            this.neutralValues.push(detections[0].expressions.neutral);\n          }\n          if (detections[0].expressions.sad) {\n            // console.log(\"sad: \", detections[0].expressions.sad);\n            //store SAD values in the array sadValues\n            this.sadValues.push(detections[0].expressions.sad);\n          }\n          if (detections[0].expressions.surprised) {\n            // console.log(\"surprised: \", detections[0].expressions.surprised);\n            //store SURPRISED values in the array surprisedValues\n            this.surprisedValues.push(detections[0].expressions.surprised);\n          }\n          // console.log(\"age: \", detections[0].age);\n          this.ageValues.push(detections[0].age);\n          // console.log(\"gender: \", detections[0].gender);\n          this.genderValues.push(detections[0].gender);\n        }\n      }, 100);\n    });\n  };\n  //__________________________________________________________//\n\n  //////////////////////COMPONENTS-MOUNT////////////////////////\n  componentDidMount = () => {\n    this.timeSession();\n    this.faceApi();\n    //TAB FOCUS\n    document.addEventListener(\n      visibilityChange,\n      this.handleVisibilityChange,\n      false\n    );\n  };\n  //_____________________________________________________________\n\n  //////////////////////COMPONENTS-UNMOUNT////////////////////////\n  componentWillUnmount = () => {\n    // TAB FOCUS\n    document.removeEventListener(visibilityChange, this.handleVisibilityChange);\n\n    this.timeSession();\n    this.timeSessionCalculation();\n    this.dataManager();\n  };\n  //______________________________________________________________\n\n  ///////////////////////////RENDER///////////////////////////////\n  render() {\n    //CHECK THE FOCUS OF THE TAB AND EITHER SEND DATA TO DB OR RESTART DETECTION\n    if (this.state.actions[this.state.actions.length - 1] === \"hide\") {\n      console.log(\"TAB FOCUS IS HIDDEN\");\n      this.timeSession();\n      this.timeSessionCalculation();\n      this.dataManager();\n    } else if (this.state.actions[this.state.actions.length - 1] === \"show\") {\n      this.timeElapsed = [];\n      this.timeSession();\n      this.faceApi();\n    }\n    return (\n      <div className=\"faceApi\">\n        <Beforeunload\n          onBeforeunload={() => {\n            console.log(\"DISPLAY PROPS: ----\", this.props);\n            this.timeSession();\n            this.timeSessionCalculation();\n            this.dataManager();\n            return false;\n          }}\n        />\n        <video\n          // ref={this.videoTag}\n          id=\"video\"\n          width=\"720\"\n          height=\"560\"\n          autoPlay\n          muted\n        ></video>\n        {/* <button\n          onClick={() => {\n            this.setState(this.MaxAndAvg());\n            // console.log(\"ANGRYVALUES\", this.angryValues);\n            console.log(\"STATE DURING THE SESSION -----------\", this.state);\n          }}\n        >\n          CHECK STATE\n        </button> */}\n      </div>\n    );\n  }\n}\n","import React, { useState, Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FaceApi from \"../face-api/FaceApi\";\nimport ReactPlayer from \"react-player\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\n// Written in a functional component. Same as below.\n\nconst DisplayPost = props => {\n  // }\n  // class DisplayPost extends Component {\n  // state = {\n  //   loading: true\n  // };\n\n  // componentDidMount = () => {\n  //   setTimeout(() => {\n  //     this.setState({\n  //       loading: false\n  //     });\n  //   },8000);\n  // };\n  // const [loading, setLoading] = useState(true)\n\n  // render() {\n  console.log(props);\n  const video = props.contentType === \"video\";\n  const audio = props.contentType === \"audio\";\n  const image = props.contentType === \"image\";\n  // console.log(props);\n  return (\n    <>\n      <div className='motusHeader'>\n        <h1 className='h1'>{props.title}</h1>\n        <Link to={`/u/${props.owner}`}>{props.owner}</Link>\n\n        {image && (\n          <img className='' src={props.urlPath} style={{ width: \"100%\" }} />\n        )}\n        {video && (\n          <div className='videoPlayer'>\n            <div className='embed-responsive'>\n              <ReactPlayer url={props.urlPath} controls={true} />\n            </div>\n          </div>\n        )}\n        {audio && (\n          <div className='motusHeader'>\n            <ReactAudioPlayer src={props.urlPath} controls />\n          </div>\n        )}\n        <br />\n        <h5 className='h5'>Description</h5>\n        <p>{props.body}</p>\n        <br />\n        <h5 className='h5'>{props.viewTotal} views</h5>\n        <br />\n        {/* <FaceApi id={this.props.viewId} /> */}\n      </div>\n      {/* )} */}\n      <FaceApi id={props.viewId} />\n    </>\n  );\n  // }\n};\n\nexport default DisplayPost;\n\n// export default class DisplayPost extends Component {\n//   // componentDidMount = () => {\n//   //   this.props.newView();\n//   // };\n//   // console.log(this.props)\n\n//   render() {\n//     console.log(\"LOOK HERE NOW MOFO\", this.props);\n//     return (\n//       <div>\n//         <ReactPlayer url={\"https://www.youtube.com/watch?v=8kOiLadbzpM\"} />\n//         <br />\n//         HERE {this.props.views} views\n//         <br />\n//         <Link to={`/u/${this.props.owner}`}>Check the creator's page</Link>\n//         <h1>{this.props.title}</h1>\n//         <h3>{this.props.owner}</h3>\n//         {this.props.body}\n//         <FaceApi id={this.props.id} />\n//       </div>\n//     );\n//   }\n// }\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DisplayPost from \"./DisplayPost\";\n\nconst Post = props => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [contentId, setContentId] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [ownerId, setOwnerId] = useState(\"\");\n  const [viewId, setViewId] = useState(\"\");\n  const [viewTotal, setViewTotal] = useState(0);\n  const [urlPath, setUrlPath] = useState(\"\");\n  const [contentType, setContentType] = useState(\"\");\n\n  // const getPostData = () => {\n  //    axios.get(`/u / api / ${ user } /${contentId}`).then(response => {\n  //   const newId = response.data._id;\n  //   const owner = response.data.owner.username;\n  //   const ownerId = response.data.owner._id;\n  //   const viewTotal = response.data.views.length;\n  //   const { title, body } = response.data;\n  //   axios.post(`/api/views/${newId}`).then(created => {\n  //     const viewId = created.data._id;\n  //     setBody(body);\n  //     setTitle(title);\n  //     setOwner(owner);\n  //     setOwnerId(ownerId);\n  //     setViewId(viewId);\n  //     setContentId(newId);\n  //     setViewTotal(viewTotal);\n  //   });\n  // });\n  // };\n\n  useEffect(() => {\n    // getPostData(); Same thing as the function above. Everything written here to stop watning\n    const { user } = props.match.params;\n    const contentId = props.match.params.id;\n    axios.get(`/u/api/${user}/${contentId}`).then(response => {\n      const newId = response.data._id;\n      const owner = response.data.owner.username;\n      const ownerId = response.data.owner._id;\n      const viewTotal = response.data.views.length;\n      const { title, body, contentType, urlPath } = response.data;\n\n      axios.post(`/api/views/${newId}`).then(created => {\n        const viewId = created.data._id;\n        setBody(body);\n        setTitle(title);\n        setOwner(owner);\n        setOwnerId(ownerId);\n        setViewId(viewId);\n        setContentId(newId);\n        setViewTotal(viewTotal);\n        setContentType(contentType);\n        setUrlPath(urlPath);\n      });\n    });\n  }, []);\n\n  const state = {\n    title,\n    body,\n    contentId,\n    owner,\n    ownerId,\n    viewId,\n    viewTotal,\n    contentType,\n    urlPath\n  };\n\n  return (\n    <div>\n      {/* <h1>{contentType}</h1>\n      <br />\n      <h1>#of Views {viewTotal}</h1>\n      <h1>{title} </h1>\n      <h2>{body}</h2>\n      <h3>CONTENT ID: {contentId}</h3>\n      <h4>OWNER: {owner} </h4>\n      <h5>OWNERID: {ownerId} </h5>\n      <h6>viewID: {viewId} </h6> */}\n\n      <DisplayPost {...state} />\n    </div>\n  );\n};\n\nexport default Post;\n\n// export default class Post extends Component {\n//   state = {\n//     title: \"\",\n//     body: \"\",\n//     id: \"\",\n//     owner: \"\",\n//     ownerId: \"\",\n//     views: 0\n//   };\n\n//   componentDidMount = () => {\n//     this.getPostData();\n//   };\n\n//   getPostData = () => {\n//     const { user, id } = this.props.match.params;\n//     console.log(id);\n//     axios.get(`/u/api/${user}/${id}`).then(response => {\n//       const views = response.data.views + 1;\n//       const newId = response.data._id;\n\n//       axios.put(`/u/api/views/${newId}`, { views }).then(response => {\n//         console.log(\"PUT REQUEST NOW\", response.data);\n//         const owner = response.data.owner.username;\n//         const ownerId = response.data.owner._id;\n//         const { title, body } = response.data;\n//         this.setState({\n//           title,\n//           body,\n//           owner,\n//           ownerId,\n//           views: response.data.views\n//         });\n//       });\n\n//       this.setState({\n//         views\n//       });\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <DisplayPost newView={this.newView} {...this.state} />\n\n//         <DisplayPost {...this.state} />\n//         {/* Here To add the FaceDetection */}\n//         <ReactPlayer url={\"https://www.youtube.com/watch?v=8kOiLadbzpM\"} />\n//       </div>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst UserCard = props => {\n  console.log(props);\n  return (\n    <div className='text-center dashCard'>\n      <div className='contentCard'>\n        <h2>{props.content.title}</h2>\n        <h4>{props.content.date}</h4>\n        <h3>{props.content.contentType}</h3>\n\n        <Link\n          style={{ textDecoration: \"none\", color: \"black\" }}\n          to={`/u/${props.user}/${props.content._id}`}\n        >\n          <i className='fas fa-lg fa-eye'></i>\n        </Link>\n        <hr style={{ width: \"60%\" }} />\n      </div>\n    </div>\n  );\n};\n\nexport default UserCard;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport UserCard from \"./UserCard\";\n\n// WRITTEN IN HOOKS. SAME AS BELOW\n\nconst CreatorPage = props => {\n  const [content, setContent] = useState([]);\n  const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    // getData() same thing as below. useEffect gives out a warning\n    const { user } = props.match.params;\n    axios.get(`/u/api/${user}`).then(contentArr => {\n      const contentData = contentArr.data;\n      setContent(contentData);\n      setUser(user);\n    });\n  }, []);\n\n  // const getData =() => {\n  //    const { user } = props.match.params;\n  //    axios.get(`/u/api/${user}`).then(contentArr => {\n  //      console.log(contentArr.data);\n  //      const contentData = contentArr.data;\n  //      setContent(contentData);\n  //      setUser(user);\n  //    });\n  // }\n\n  return (\n    <>\n      <div>\n        <h2 style={{ textAlign: \"center\" }} className='logIn h3'>\n          My Content Dashboard\n        </h2>\n\n        <br />\n\n        {content.reverse().map(el => {\n          return <UserCard content={el} key={el._id} user={user} />;\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default CreatorPage;\n\n// export default class CreatorPage extends Component {\n//   state = {\n//     content: [],\n//     user: \"\"\n//   };\n\n//   componentDidMount = () => {\n//     console.log(\"Mounted\");\n//     this.getData();\n//   };\n\n//   getData = () => {\n//     // console.log(this.props.match.params);\n//     const { user } = this.props.match.params;\n//     axios.get(`/u/api/${user}`).then(contentArr => {\n//       this.setState({\n//         content: contentArr.data,\n//         user\n//       });\n//     });\n//   };\n\n//   render() {\n//     console.log(\"André\", this.state);\n//     return (\n//       <>\n//         {this.state.content.reverse().map(el => {\n//           return <UserCard content={el} key={el._id} user={this.state.user} />;\n//         })}\n//       </>\n//     );\n//   }\n// }\n","import React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { MDBBtn } from \"mdbreact\";\n\nexport default class Chart extends Component {\n  state = {\n    avgChartData: {},\n    maxChartData: {},\n    emotionalImpact: 0,\n    malePercent: 0,\n    femalePercent: 0,\n    age: 0,\n    views: 0,\n    content: [],\n    time: \"\"\n  };\n\n  componentDidMount = () => {\n    this.getData(this.props.content.views);\n  };\n\n  getData = viewsArr => {\n    if (!viewsArr.length) {\n      return;\n    } else {\n      console.log(\"ARRAY OF VIEWS???\", viewsArr);\n      const averageEmotion = viewsArr.map(el => {\n        return el.averageEmotion;\n      });\n      const maxEmotion = viewsArr.map(el => {\n        return el.maxEmotion;\n      });\n      function getEmotion(emotion) {\n        const sum = averageEmotion.reduce((acum, value) => {\n          if (value && value[emotion]) {\n            acum++;\n          }\n          return acum;\n        }, 0);\n        return sum;\n      }\n      let timeArr = [];\n      viewsArr.forEach(el => {\n        timeArr.push(el.time.min * 60);\n        timeArr.push(el.time.sec);\n      });\n      function myTime(time) {\n        const hr = ~~(time / 3600);\n        const min = ~~((time % 3600) / 60);\n        const sec = time % 60;\n        let sec_min = \"\";\n        if (hr > 0) {\n          sec_min += \"\" + hr + \":\" + (min < 10 ? \"0\" : \"\");\n        }\n        sec_min += \"\" + min + \":\" + (sec < 10 ? \"0\" : \"\");\n        sec_min += \"\" + sec;\n        return sec_min + \" min\";\n      }\n      const secsAvg = Math.round(getAverage(timeArr));\n      const time = myTime(secsAvg);\n\n      function getAverage(array) {\n        let sum = array.reduce((previous, current) => (current += previous));\n        let avg = sum / array.length;\n        return avg;\n      }\n      function getMaxEmotion(emotion) {\n        const emotionArr = maxEmotion.map(el => {\n          return el[emotion];\n        });\n        return getAverage(emotionArr);\n      }\n      let neutralityArr = [];\n      averageEmotion.forEach(elem => {\n        neutralityArr.push(elem.neutralAvg);\n      });\n      let emotionalImpact = (100 - getAverage(neutralityArr)).toFixed(2);\n      console.log(\"Emo \", emotionalImpact);\n      let ageAverage = [];\n      viewsArr.forEach(elem => {\n        ageAverage.push(elem.age);\n      });\n      let age = Math.floor(getAverage(ageAverage));\n      console.log(\"Age \", age);\n      let genderArr = [];\n      viewsArr.forEach(elem => {\n        if (elem.gender) {\n          genderArr.push(elem.gender);\n        } else {\n        }\n      });\n      let male = genderArr.filter(el => {\n        if (el === \"male\") return el;\n      });\n      const malePercent = genderArr.length\n        ? ((male.length / genderArr.length) * 100).toFixed(2)\n        : 0;\n      const femalePercent = genderArr.length\n        ? (((genderArr.length - male.length) / genderArr.length) * 100).toFixed(\n            2\n          )\n        : 0;\n      const views = viewsArr.length;\n\n      const emotionsCount = {\n        angry: getEmotion(\"angryAvg\"),\n        disgusted: getEmotion(\"disgustedAvg\"),\n        fearful: getEmotion(\"fearfulAvg\"),\n        happy: getEmotion(\"happyAvg\"),\n        sad: getEmotion(\"sadAvg\"),\n        surprised: getEmotion(\"surprisedAvg\")\n      };\n\n      const avgChartData = {\n        labels: [\"Angry\", \"Disgusted\", \"Fearful\", \"Happy\", \"Sad\", \"Surprised\"],\n        datasets: [\n          {\n            label: \"Emotions detected\",\n            data: [\n              emotionsCount.angry,\n              emotionsCount.disgusted,\n              emotionsCount.fearful,\n              emotionsCount.happy,\n              emotionsCount.sad,\n              emotionsCount.surprised\n            ],\n            backgroundColor: [\n              \"rgba(255, 95, 132, 0.6)\",\n              \"rgba(54, 162, 235, 0.6)\",\n              \"rgba(255, 206, 86, 0.6)\",\n              \"rgba(75, 192, 192, 0.6)\",\n              \"rgba(153, 102, 255, 0.6)\",\n              \"rgba(255, 159, 64, 0.6)\",\n              \"rgba(255, 99, 132, 0.6)\"\n            ]\n          }\n        ]\n      };\n      const maxChartData = {\n        labels: [\"Angry\", \"Disgusted\", \"Fearful\", \"Happy\", \"Sad\", \"Surprised\"],\n        datasets: [\n          {\n            label: \"Max emotion by %\",\n            data: [\n              getMaxEmotion(\"angryMax\") * 100,\n              getMaxEmotion(\"disgustedMax\") * 100,\n              getMaxEmotion(\"fearfulMax\") * 100,\n              getMaxEmotion(\"happyMax\") * 100,\n              getMaxEmotion(\"sadMax\") * 100,\n              getMaxEmotion(\"surprisedMax\") * 100\n            ],\n            backgroundColor: [\n              \"rgba(255, 95, 132, 0.6)\",\n              \"rgba(54, 162, 235, 0.6)\",\n              \"rgba(255, 206, 86, 0.6)\",\n              \"rgba(75, 192, 192, 0.6)\",\n              \"rgba(153, 102, 255, 0.6)\",\n              \"rgba(255, 159, 64, 0.6)\",\n              \"rgba(255, 99, 132, 0.6)\"\n            ]\n          }\n        ]\n      };\n\n      this.setState({\n        avgChartData: avgChartData,\n        maxChartData,\n        age: age,\n        femalePercent: femalePercent,\n        malePercent: malePercent,\n        emotionalImpact: emotionalImpact,\n        views: views,\n        time: time\n        //   content: content\n      });\n    }\n  };\n  //   componentDidMount = () => {\n  //     this.props.getData(this.props.content.views);\n  //   };\n\n  setNewData = state => {\n    this.props.updateState(\n      state,\n      this.state.emotionalImpact,\n      this.state.malePercent,\n      this.state.femalePercent,\n      this.state.age,\n      this.state.views,\n      this.props.content.title,\n      this.state.time\n    );\n  };\n\n  render() {\n    // this.getDato();\n    return (\n      <div className='headingTable'>\n        {/* Title */}\n        <div style={{ width: \"100px\" }} className='h5 text-center'>\n          <h5>{this.props.content.title} </h5>\n        </div>\n        {/* Type */}\n        <div style={{ width: \"100px\" }} className='h5 text-center'>\n          <h5>{this.props.content.contentType} </h5>\n        </div>\n        {/* views */}\n        <div style={{ width: \"100px\" }} className='h5 text-center'>\n          <h5>{this.props.content.views.length} </h5>\n        </div>\n        {/* date */}\n        <div style={{ width: \"100px\" }} className='h5 text-center'>\n          <h5>{this.props.content.date}</h5>\n        </div>\n        {/* overview */}\n        <div style={{ width: \"100px\" }} className='h5 text-center'>\n          <i\n            className='fas fa-eye'\n            style={{ cursor: \"pointer\" }}\n            onClick={() => this.setNewData(this.state.avgChartData)}\n          ></i>\n          {/* <MDBBtn onClick={() => this.setNewData(this.state.avgChartData)}>\n            show\n          </MDBBtn> */}\n        </div>\n        {/* peaks */}\n        <div style={{ width: \"85px\" }} className='h5 text-center'>\n          <i\n            className='fas fa-eye'\n            style={{ cursor: \"pointer\" }}\n            onClick={() => this.setNewData(this.state.maxChartData)}\n          ></i>\n\n          {/* <MDBBtn onClick={() => this.setNewData(this.state.maxChartData)}>\n            show\n          </MDBBtn> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport ContentInfo from \"./ContentInfo\";\nimport { MDBBtn } from \"mdbreact\";\nimport { Link, Switch, Route } from \"react-router-dom\";\n\nexport default class Chart extends Component {\n  state = {\n    chartData: {},\n    emotionalImpact: 0,\n    malePercent: 0,\n    femalePercent: 0,\n    age: 0,\n    views: 0,\n    content: [],\n    viewsArr: [],\n    title: \"\",\n    time: \"\"\n  };\n  componentDidMount = () => {\n    const user = this.props.user.username;\n    axios.get(`/api/chart/all/${user}`).then(response => {\n      console.log(response);\n      const allContent = response.data;\n      const viewsArr = [];\n      const viewsData = response.data.map(el => {\n        return el.views;\n      });\n      viewsData.forEach(elem => {\n        elem.forEach(el => {\n          viewsArr.push(el);\n        });\n      });\n      this.getData(viewsArr);\n      this.setState({ content: allContent.reverse(), viewsArr });\n    });\n\n    // this.getData();\n  };\n\n  getData = viewsArr => {\n    if (!viewsArr.length) {\n      return;\n    } else {\n      const averageEmotion = viewsArr.map(el => {\n        return el.averageEmotion;\n      });\n      const maxEmotion = viewsArr.map(el => {\n        return el.maxEmotion;\n      });\n      function getEmotion(emotion) {\n        const sum = averageEmotion.reduce((acum, value) => {\n          if (value && value[emotion]) {\n            acum++;\n          }\n          return acum;\n        }, 0);\n        return sum;\n      }\n\n      const getAverage = array => {\n        let sum = array.reduce((previous, current) => (current += previous));\n        let avg = sum / array.length;\n        return avg;\n      };\n\n      let neutralityArr = [];\n      averageEmotion.forEach(elem => {\n        neutralityArr.push(elem.neutralAvg);\n      });\n      let emotionalImpact = (100 - getAverage(neutralityArr)).toFixed(2);\n      let ageAverage = [];\n      viewsArr.forEach(elem => {\n        ageAverage.push(elem.age);\n      });\n      let timeArr = [];\n      viewsArr.forEach(el => {\n        timeArr.push(el.time.min * 60);\n        timeArr.push(el.time.sec);\n      });\n      function myTime(time) {\n        const hr = ~~(time / 3600);\n        const min = ~~((time % 3600) / 60);\n        const sec = time % 60;\n        let sec_min = \"\";\n        if (hr > 0) {\n          sec_min += \"\" + hr + \":\" + (min < 10 ? \"0\" : \"\");\n        }\n        sec_min += \"\" + min + \":\" + (sec < 10 ? \"0\" : \"\");\n        sec_min += \"\" + sec;\n        return sec_min + \" min\";\n      }\n      const secsAvg = Math.round(getAverage(timeArr));\n      const time = myTime(secsAvg);\n\n      // console.log(\"Time-----\", time);\n      let age = Math.floor(getAverage(ageAverage));\n      let genderArr = [];\n      viewsArr.forEach(elem => {\n        if (elem.gender) {\n          genderArr.push(elem.gender);\n        } else {\n          return;\n        }\n      });\n      console.log(genderArr);\n      let male = genderArr.filter(el => {\n        if (el === \"male\") return el;\n      });\n      const malePercent = genderArr.length\n        ? ((male.length / genderArr.length) * 100).toFixed(2)\n        : 0;\n      const femalePercent = genderArr.length\n        ? (((genderArr.length - male.length) / genderArr.length) * 100).toFixed(\n            2\n          )\n        : 0;\n      const views = viewsArr.length;\n\n      const emotionsCount = {\n        angry: getEmotion(\"angryAvg\"),\n        disgusted: getEmotion(\"disgustedAvg\"),\n        fearful: getEmotion(\"fearfulAvg\"),\n        happy: getEmotion(\"happyAvg\"),\n        sad: getEmotion(\"sadAvg\"),\n        surprised: getEmotion(\"surprisedAvg\")\n      };\n\n      const chartData = {\n        labels: [\"Angry\", \"Disgusted\", \"Fearful\", \"Happy\", \"Sad\", \"Surprised\"],\n        datasets: [\n          {\n            label: \"Emotions detected\",\n            data: [\n              emotionsCount.angry,\n              emotionsCount.disgusted,\n              emotionsCount.fearful,\n              emotionsCount.happy,\n              emotionsCount.sad,\n              emotionsCount.surprised\n            ],\n            backgroundColor: [\n              \"rgba(255, 95, 132, 0.6)\",\n              \"rgba(54, 162, 235, 0.6)\",\n              \"rgba(255, 206, 86, 0.6)\",\n              \"rgba(75, 192, 192, 0.6)\",\n              \"rgba(153, 102, 255, 0.6)\",\n              \"rgba(255, 159, 64, 0.6)\",\n              \"rgba(255, 99, 132, 0.6)\"\n            ]\n          }\n        ]\n      };\n\n      const title = \"All\";\n      //console.log(\"CHECKING STUFF\", time, title);\n      this.updateState(\n        chartData,\n        emotionalImpact,\n        malePercent,\n        femalePercent,\n        age,\n        views,\n        title,\n        time\n      );\n    }\n  };\n  updateState = (\n    chartData,\n    emotionalImpact,\n    malePercent,\n    femalePercent,\n    age,\n    views,\n    title = \"All\",\n    time\n\n    // content\n  ) => {\n    this.setState({\n      chartData: chartData,\n      age: age,\n      femalePercent: femalePercent,\n      malePercent: malePercent,\n      emotionalImpact: emotionalImpact,\n      views: views,\n      title: title,\n      time: time\n      //   content: content\n    });\n  };\n\n  resetData = () => {\n    this.setState({ title: \"All\" });\n    this.getData(this.state.viewsArr);\n  };\n\n  render() {\n    // GENDER DOUGHNUT\n    const gender = {\n      labels: [\"Male\", \"Female\"],\n      datasets: [\n        {\n          data: [this.state.malePercent, this.state.femalePercent],\n          backgroundColor: [\"#36A2EB\", \"#ff8173\"],\n          hoverBackgroundColor: [\"#36A2EB\", \"#ff8173\"]\n        }\n      ]\n    };\n\n    const emotions = {\n      labels: [\"No\", \"Yes\"],\n      datasets: [\n        {\n          data: [100 - this.state.emotionalImpact, this.state.emotionalImpact],\n          backgroundColor: [\"#cfcfcf\", \"#000000\"],\n          hoverBackgroundColor: [\"#cfcfcf\", \"#000000\"]\n        }\n      ]\n    };\n    console.log(\"look\", this.state.title);\n    return (\n      <>\n        <br />\n        <br />\n        {!this.state.title && (\n          <h1 style={{ textAlign: \"center\" }}>\n            Try sharing your content with more people. We still need to check\n            more analytics\n          </h1>\n        )}\n        <h1 style={{ textAlign: \"center\" }} className='h1'>\n          {this.state.title}\n        </h1>\n        {this.state.content.length && (\n          <div>\n            <div className='chart'>\n              <Bar\n                data={this.state.chartData}\n                options={{ maintainAspectRatio: false }}\n              />\n            </div>\n\n            <hr width='80%' />\n\n            <div className='displayPie'>\n              <div className='doughnut'>\n                <h5 className='h5' style={{ textAlign: \"center\" }}>\n                  Gender\n                </h5>\n                <Doughnut\n                  data={gender}\n                  options={{ maintainAspectRatio: true }}\n                />\n              </div>\n\n              <div className='doughnut'>\n                <h5 className='h5' style={{ textAlign: \"center\" }}>\n                  Emotional Impact\n                </h5>\n                <Doughnut\n                  data={emotions}\n                  options={{ maintainAspectRatio: true }}\n                />\n              </div>\n            </div>\n\n            <hr width='80%' />\n\n            <div className='textChart'>\n              <div>\n                <h5 className='h5'>Views</h5>\n                <p>{this.state.views}</p>\n              </div>\n              <div>\n                <h5 className='h5'>Time spent</h5>\n                <p>{this.state.time}</p>\n              </div>\n            </div>\n\n            <hr width='80%' />\n\n            <div style={{ textAlign: \"center\", marginRight: \"5%\" }}>\n              <MDBBtn onClick={() => this.resetData()}>Show all Data</MDBBtn>\n            </div>\n\n            <hr width='95%' />\n\n            <div className='headingTable'>\n              <h5 style={{ width: \"100px\" }} className='h5 text-center'>\n                Title\n              </h5>\n              <h5 style={{ width: \"100px\" }} className='h5 text-center'>\n                Type\n              </h5>\n              <h5 style={{ width: \"100px\" }} className='h5 text-center'>\n                Views\n              </h5>\n              <h5 style={{ width: \"100px\" }} className='h5 text-center'>\n                Created\n              </h5>\n              <h5 style={{ width: \"100px\" }} className='h5 text-center'>\n                Overview\n              </h5>\n              <h5 style={{ width: \"100px\" }} className='h5 text-center'>\n                Peaks\n              </h5>\n            </div>\n\n            {this.state.content.map(el => {\n              return (\n                <>\n                  <ContentInfo updateState={this.updateState} content={el} />\n                </>\n              );\n            })}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\n// import {\n//   MDBContainer,\n//   MDBRow,\n//   MDBCol,\n//   MDBBtn,\n//   MDBCard,\n//   MDBCardBody,\n//   MDBInput,\n//   MDBLabel\n// } from \"mdbreact\";\n\nimport \"../App.css\";\n\nconst Header = () => {\n  return (\n    <>\n      {/* <h1 className=\" text-center logIn\"> Welcome to </h1> */}\n      <img className='motusHeader logIn' src='motus-header.png' />\n\n      <iframe\n        style={{ pointerEvents: \"none\" }}\n        src='https://giphy.com/embed/KD1vTHZYe5l8TcPZHo'\n        width='480'\n        height='300'\n        frameBorder='0'\n        className=' motusHeader giphy-embed'\n        allowFullScreen\n      ></iframe>\n      <p\n        style={{ fontSize: \"2rem\", color: \"darkgrey\", lineHeight: \"0.9\" }}\n        className='motusHeader'\n      >\n        the app that makes analytics of a content in terms of user's emotions,\n        age, gender and time spent on a page\n      </p>\n    </>\n  );\n};\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBInput,\n  MDBLabel\n} from \"mdbreact\";\n\nconst EditProfile = ({ setUser, handleSubmit, onImageUpload, user }) => {\n  return (\n    // <form onSubmit={handleSubmit}>\n    //   <label htmlFor='fullName'>Name</label>\n    //   <input\n    //     type='text'\n    //     name='fullName'\n    //     id='fullName'\n    //     value={user.fullName}\n    //     onChange={e => setUser({ ...user, [e.target.name]: e.target.value })}\n    //   />\n    //   <label htmlFor='username'>Username</label>\n    //   <input\n    //     type='text'\n    //     name='username'\n    //     id='username'\n    //     value={user.username}\n    //     onChange={e => setUser({ ...user, [e.target.name]: e.target.value })}\n    //   />\n    //   <label htmlFor='oldPasswordTest'>Old Password</label>\n    //   <input\n    //     type='password'\n    //     name='oldPasswordTest'\n    //     id='oldPasswordTest'\n    //     value={user.oldPasswordTest}\n    //     onChange={e => setUser({ ...user, [e.target.name]: e.target.value })}\n    //   />\n    //   <label htmlFor='newPasswordTest'>Password</label>\n    //   <input\n    //     type='password'\n    //     name='newPasswordTest'\n    //     id='newPasswordTest'\n    //     value={user.newPasswordTest}\n    //     onChange={e => setUser({ ...user, [e.target.name]: e.target.value })}\n    //   />\n    //   <label htmlFor='file'>Profile Picture</label>\n    //   <input\n    //     type='file'\n    //     name='profilePicture'\n    //     id='profilePicture'\n    //     onChange={onImageUpload}\n    //   />\n    //   <button type='submit'>Submit your changes</button>\n    // </form>\n    <MDBContainer>\n      <MDBRow>\n        <MDBCol>\n          <form onSubmit={handleSubmit} encType='multipart/form-data'>\n            {/* <label htmlFor=\"fullName\">Name</label> */}\n            <MDBInput\n              label='name'\n              type='text'\n              name='fullName'\n              id='fullName'\n              value={user.fullName}\n              onChange={({ target: { name, value } }) =>\n                setUser({ ...user, [name]: value })\n              }\n            />\n            {/* <label htmlFor=\"username\">Username</label> */}\n            <MDBInput\n              label='username'\n              type='text'\n              name='username'\n              id='username'\n              value={user.username}\n              onChange={({ target: { name, value } }) =>\n                setUser({ ...user, [name]: value })\n              }\n            />\n            {/* <label htmlFor=\"oldPasswordTest\">Old Password</label> */}\n            <MDBInput\n              label='oldpassword'\n              type='password'\n              name='oldPasswordTest'\n              id='oldPasswordTest'\n              value={user.oldPasswordTest}\n              onChange={({ target: { name, value } }) =>\n                setUser({ ...user, [name]: value })\n              }\n            />\n            {/* <label htmlFor=\"newPasswordTest\">Password</label> */}\n            <MDBInput\n              label='new password'\n              type='password'\n              name='newPasswordTest'\n              id='newPasswordTest'\n              value={user.newPasswordTest}\n              onChange={({ target: { name, value } }) =>\n                setUser({ ...user, [name]: value })\n              }\n            />\n            {/* <label htmlFor=\"file\">Profile Picture</label>\n            <input\n              type=\"file\"\n              name=\"profilePictureTest\"\n              id=\"profilePictureTest\"\n              onChange={onImageUpload}\n            /> */}\n            {/* <div className='input-group'>\n              <div className='custom-file'>\n                <input\n                  type='file'\n                  name='profilePictureTest'\n                  id='profilePictureTest'\n                  onChange={onImageUpload}\n                  className='custom-file-input'\n                  aria-describedby='inputGroupFileAddon01'\n                />\n                <label className='custom-file-label grey-text' htmlFor='file'>\n                  choose file\n                </label>\n              </div>\n            </div> */}\n            <div className='text-center'>\n              <MDBBtn type='submit'>Save</MDBBtn>\n            </div>\n          </form>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default EditProfile;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport EditProfile from \"./EditProfile\";\n\nconst Settings = ({ user: { _id }, history }) => {\n  console.log(_id);\n\n  // fullName: \"RootRoot\"\n  // password: \"$2b$10$cN33/c5k3SqGYLQbAIcg.ugPhr8oJAkNIH5fTq9zsidvOFz2aTU4a\"\n  // updated_at: \"2019-10-09T14:38:28.844Z\"\n  // username: \"rootroot\"\n  // __v: 0\n  // _id: \"5d9df0e4de23c3e652e51c0c\"\n  // __proto__: Object\n\n  // const [id, setId] = useState(\"\");\n  const [user, setUser] = useState({\n    fullName: \"\",\n    username: \"\",\n    profilePicture: \"\",\n    oldPasswordTest: \"\",\n    newPasswordTest: \"\"\n  });\n\n  const [clicked, setClicked] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  // const checkDatabase = () => {\n  //   axios.get(`/api/userSettings/${user._id}`).then(({ data }) => {\n  //     setFullName(data.fullName);\n  //     setUserName(data.username);\n  //     setOldPassword(data.password);\n  //   });\n  // };\n\n  useEffect(() => {\n    axios\n      .get(`/api/userSettings/${_id}`)\n      .then(({ data: { fullName, username } }) => {\n        setUser({ ...user, fullName, username });\n      });\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(user);\n    axios\n      .put(`/api/userSettings/${_id}`, user)\n      .then(() => {\n        history.push(\"/content-dashboard\");\n      })\n      .catch(err => {\n        setMessage(err.response.data.message);\n      });\n  };\n\n  const onImageUpload = event => {\n    console.log(\"the file to be added is\", event.target.files[0]);\n\n    const files = event.target.files[0];\n    const uploadData = new FormData();\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n    uploadData.append(\"profilePictureTest\", files);\n    axios.post(\"/api/userSettings/add/image\", uploadData).then(response => {\n      const profilePicture = response.data.secure_url;\n      setUser({ ...user, profilePicture });\n    });\n  };\n\n  return (\n    <div>\n      <h1 className=\" text-center mb-4 logIn\">Edit your profile</h1>\n      {/* <button onClick={checkDatabase}>Click for console.log</button> */}\n      {/* <h2>{user.username} </h2> */}\n      <EditProfile\n        setUser={setUser}\n        handleSubmit={handleSubmit}\n        onImageUpload={onImageUpload}\n        user={user}\n      />\n      <p style={{ textAlign: \"center\" }}>{message}</p>\n    </div>\n  );\n};\n\nexport default Settings;\n\n/* \n\n{_id: \"5d9df0e4de23c3e652e51c0c\", username: \"rootroot\", password: \"$2b$10$cN33/c5k3SqGYLQbAIcg.ugPhr8oJAkNIH5fTq9zsidvOFz2aTU4a\", fullName: \"RootRoot\", created_at: \"2019-10-09T14:38:28.844Z\", …}\ncreated_at: \"2019-10-09T14:38:28.844Z\"\nfullName: \"RootRoot\"\npassword: \"$2b$10$cN33/c5k3SqGYLQbAIcg.ugPhr8oJAkNIH5fTq9zsidvOFz2aTU4a\"\nupdated_at: \"2019-10-09T14:38:28.844Z\"\nusername: \"rootroot\"\n__v: 0\n_id: \"5d9df0e4de23c3e652e51c0c\"\n__proto__: Object\n\n*/\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Signup from \"./components/Signup\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport ContentManager from \"./components/Content-Dashboard/ContentManager\";\nimport AddContent from \"./components/Content-Dashboard/AddContent\";\nimport Post from \"./components/Post\";\nimport EditContent from \"./components/Content-Dashboard/EditContent\";\nimport DetectEmotion from \"./components/UserViews/DetectEmotion\";\nimport CreatorPage from \"./components/UserViews/CreatorPage\";\nimport Chart from \"./components/Chart\";\nimport Header from \"./components/Header\";\nimport Settings from \"./components/ProfileSettings/Settings\";\nclass App extends React.Component {\n  state = {\n    user: this.props.user\n  };\n\n  setUser = user => {\n    this.setState({\n      user\n    });\n  };\n\n  render() {\n    console.log(this.state.user);\n    return (\n      <div className='App'>\n        <Navbar user={this.state.user} setUser={this.setUser} />\n        <Switch>\n          {\" \"}\n          <Route\n            exact\n            path='/signup'\n            render={props => <Signup setUser={this.setUser} {...props} />}\n          />\n          <Route\n            exact\n            path='/login'\n            render={props => <Login setUser={this.setUser} {...props} />}\n          />\n          <Route\n            exact\n            path='/content-dashboard'\n            render={props => (\n              <ContentManager user={this.state.user} {...props} />\n            )}\n          />\n          <Route\n            exact\n            path='/content'\n            render={props => (\n              <ContentManager user={this.state.user} {...props} />\n            )}\n          />\n          <Route exact path='/content-dashboard/add' component={AddContent} />\n          <Route exact path='/content-dashboard/:unique' component={Post} />\n          <Route exact path='/edit/:editPost' component={EditContent} />\n          <Route exact path={\"/u/:user\"} component={CreatorPage} />\n          <Route exact path={`/u/:user/:id`} component={DetectEmotion} />\n          <Route exact path='/' component={Header} />\n          {/*   <Route\n            exact\n            path='/chart/:user'\n            render={props => <Chart user={this.state.user} {...props} />}\n          /> */}\n          <Route\n            exact\n            path='/chart'\n            render={props => <Chart user={this.state.user} />}\n          />\n          <Route\n            exact\n            path='/settings'\n            render={props => <Settings user={this.state.user} {...props} />}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  // console.log(response.data);\n\n  const user = response.data;\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}